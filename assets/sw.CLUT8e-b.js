const a={static:"static_1",dynamic:"dynamic_1"};self.addEventListener("install",e=>{console.log("install:",e),self.skipWaiting(),e.waitUntil(caches.open(a.static).then(t=>t.addAll(["/offline.html"])))}),self.addEventListener("activate",e=>{console.log("activate:",e),e.waitUntil(clients.claim()),e.waitUntil(caches.keys().then(t=>{const s=Object.values(a);return Promise.all(t.map(n=>{if(!s.includes(n))return caches.delete(n)}))}))}),self.addEventListener("fetch",e=>{console.log(e),e.request.url.startsWith("http")&&(e.request.destination?e.respondWith(caches.match(e.request).then(t=>t||fetch(e.request.clone(),{redirect:"follow"}).then(async s=>(!s||s.status!==200||s.type!=="basic"||(await caches.open(a.dynamic)).put(e.request,s.clone()),s))).catch(()=>caches.match("/offline.html"))):e.respondWith(fetch(e.request.clone(),{redirect:"follow"}).then(async t=>(t.status===200&&t.type==="basic"&&(await caches.open(a.dynamic)).put(e.request,t.clone()),t)).catch(()=>caches.match(e.request))))});
